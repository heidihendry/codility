def getArray(N):
    binarynumber = bin(N)[2:].zfill(32)
    #print (binarynumber)
    #change the binary number into a string.
    string = str(binarynumber)
    #print (string)
    length = len(string)
    bingapArray = [pos for pos, char in enumerate(string) if char == '1']
    #print(bingapArray)
    return bingapArray



def maxBinGap (myArray, myArray_len):
    if myArray_len == 1:
        max_bingap = 0
        return int(max_bingap)
    if myArray_len > 0:   
        max_bingap = int(myArray[1] - myArray [0])
        for i in range (1, myArray_len):
            if (myArray[i] - myArray[i-1] > max_bingap):
                max_bingap = int(myArray[i] - myArray[i-1])
                print (max_bingap -1)
        return int(max_bingap -1)      

def solution(N):
    bingapArray = getArray(N)  
   # print (bingapArray)
    output = maxBinGap (bingapArray, len(bingapArray))
    return int(output)
